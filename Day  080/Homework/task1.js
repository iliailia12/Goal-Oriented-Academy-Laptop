// 1შექმენით 3 ცვლადი, რომელიც არის let - ით შექმნილი და მიანიჭეთ მნიშვნელობები.
// 2შექმენით 3 ცვლადი, რომელიც არის const - ით შექმნილი და მიანიჭეთ მნიშვნელობები.
// 3, ახსენით კომენტარებით თუ რა არის let
// 4ახსენით კომენტარებით თუ რა არის const
// 5ახსენით კომენტარებით თუ რა განსხვავებაა let - სა და const - ს შორის.






// 1შექმენით 3 ცვლადი, რომელიც არის let - ით შექმნილი და მიანიჭეთ მნიშვნელობები.


let num =12
let name=' ilia'
let age = 21


// 2შექმენით 3 ცვლადი, რომელიც არის const - ით შექმნილი და მიანიჭეთ მნიშვნელობები.


const name1 ="dachi"
const name2 ="zuka"
const name3 ="lora"






// 3. let არის JavaScript-ის სიტყვა, რომელიც გამოიყენება ცვლადების დეკლარაციისთვის.
// let-ის გამოყენებისას, ცვლადი შეიძლება შეიცვალოს, რაც ნიშნავს, რომ მას შეიძლება მიენიჭოს ახალი მნიშვნელობა.
// let-ის გამოყენება საშუალებას გვაძლევს შევქმნათ ცვლადები, რომლებიც მხოლოდ კონკრეტულ ბლოკში (მაგალითად, if, for, while) არიან ხელმისაწვდომი.


// 4. const არის JavaScript-ის სიტყვა, რომელიც ასევე გამოიყენება ცვლადების დეკლარაციისთვის, მაგრამ const-ის შემთხვევაში ცვლადი არის მუდმივი.
// const-ის გამოყენებისას, ცვლადს არ შეიძლება მიენიჭოს ახალი მნიშვნელობა მას შემდეგ, რაც ის პირველად იქნება ინიციალიზებული.
// const-ის გამოყენება უზრუნველყოფს, რომ ცვლადი არ შეიცვალოს, რაც განსაკუთრებით სასარგებლოა იმ შემთხვევებში, როდესაც ჩვენ გვინდა, რომ მნიშვნელობა დარჩეს უცვლელი.


// 5. let და const შორის მთავარი განსხვავება ის არის, რომ let-ის ცვლადები შეიძლება შეიცვალოს, ხოლო const-ის ცვლადები მუდმივია.
// let-ის გამოყენება საშუალებას გვაძლევს ცვლადი შევცვალოთ, ხოლო const-ის გამოყენება უზრუნველყოფს, რომ ცვლადი არ შეიცვალოს.
// გარდა ამისა, ორივე ცვლადი ბლოკის შიგნით არის ხელმისაწვდომი, მაგრამ const-ის შემთხვევაში, თუ ცვლადი არ არის ინიციალიზებული, მას ვერ გამოვიყენებთ.