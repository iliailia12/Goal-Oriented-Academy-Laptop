1) ახსენით რა არის props destructuring და რატომ არის უკეთესი props.title ის ნაცვლად პირდაპირ { title } გამოყენება.

2) რა არის props children, რისთვის, როდის და როგორ ვიყენებთ მას? მოიყვანეთ მაგალითები(შექმენით რაიმე კომპონენტი თქვენი გემოვნებით)

3) როდის ვიყენებთ ternary operator ს React ში და რა უპირატესობა აქვს მას ჩვეულებრივ if else თან შედარებით

4) რისთვის ვიყენებთ .map() ფუნქციას React ში

5) შექმენით UserStatus კომპონენტი, რომელიც მიიღებს:
--> userName
--> isOnline = false (ნაგულისხმები მნიშვნელობა)
თუ isOnline == true კომპონენტი დაარენდერებს `{userName} is Online`
თუ isOnline == false კომპონენტი დაარენდერებს `{userName} is Offline`
გააკეთეთ ამ კომპონენტის ორი ვარიანტი:
    1. if else გამოყენებით
    2. ternary operator გამოყენებით

6) შექმენით UserFriends კომპონენტი რომელიც მიიღებს შემდეგი სახის სიას:
[
  { name: 'Jon', status: 'offline', profilePic: '😎'},
  { name: 'Bob', status: 'online', profilePic: '🤗' }
]
ამ კომპონენტმა უნდა დაამუშავოს ეს სია და დაარენდეროს:
    This is Your Friends list:
        * 😎 Jon is offline
        * 🤗 Bob is online
თუ სია ცარიელია -> You Don't Have Friends Yet.
P.S დაიხმარეთ 5 დავალების კომპონენტი

7) შექმენით UserCard კომპონენტი. რომელიც მიიღებს: სახელს, გვარს, ასაკს, სქესს, მეგობრების სიას,(ისეთი როგორც დავალება 6 ში), სტატუსს(isOnline) და ა.შ.
-> მოახდინეთ props დესტრუქცია ფუნქციის პარამეტრშივე
-> გააფორმეთ და გამოსახეთ ეს მონაცემები
-> გამოიყენეთ დავალება 5 ის კომპონენტი რათა გამოსახოთ User ის სტატუსი
-> გამოიყენეთ დავალება 6 ის კომპონენტი რათა გამოსახოთ User ის მეგობრები
ცოტა შეალამაზეთ ეს კომპონენტი